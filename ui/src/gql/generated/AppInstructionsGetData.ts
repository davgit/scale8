/* tslint:disable */
/* eslint-disable */
// This file was automatically generated and should not be edited.

import { TagType } from "./globalTypes";

// ====================================================
// GraphQL query operation: AppInstructionsGetData
// ====================================================

export interface AppInstructionsGetData_getApp_environments_revision_tags {
  __typename: "Tag";
  /**
   * Tag ID
   */
  id: string;
  /**
   * Tag name
   */
  name: string;
  /**
   * Tag code, this persists when cloned. It is generated by the parent tag and
   * inherited by all other tags cloned from this point. It is immutable by design.
   */
  tag_code: string;
  /**
   * Tag type, see `TagType`
   */
  type: TagType;
  /**
   * If the tag should be automatically loaded on all pages.
   */
  auto_load: boolean;
}

export interface AppInstructionsGetData_getApp_environments_revision {
  __typename: "Revision";
  /**
   * Revision ID
   */
  id: string;
  /**
   * Get all the tags linked to this revision
   */
  tags: AppInstructionsGetData_getApp_environments_revision_tags[];
}

export interface AppInstructionsGetData_getApp_environments {
  __typename: "Environment";
  /**
   * `Environment` ID
   */
  id: string;
  /**
   * `Environment` name
   */
  name: string;
  /**
   * `Environment`'s CNAME
   */
  cname: string;
  /**
   * `Environment`'s install domain used to embed in web page
   */
  install_domain: string;
  /**
   * `Environment`'s install endpoint
   */
  install_endpoint: string;
  /**
   * `Environment`'s custom domain name if configured
   */
  custom_domain: string | null;
  /**
   * `Revision` currently attached to the `Environment`
   */
  revision: AppInstructionsGetData_getApp_environments_revision;
}

export interface AppInstructionsGetData_getApp {
  __typename: "App";
  /**
   * ID of the `App`
   */
  id: string;
  /**
   * Environments connected to the `App`. Environments are used to create a fixed deployment of a Revision
   */
  environments: AppInstructionsGetData_getApp_environments[];
}

export interface AppInstructionsGetData {
  /**
   * @bound=App
   * Get an App model from the App ID
   */
  getApp: AppInstructionsGetData_getApp;
}

export interface AppInstructionsGetDataVariables {
  id: string;
}
