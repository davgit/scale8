version: "3.7"
services:
    mongodb:
        image: mongo:4.4
        # for testing with mongo running as a replica set. this is useful for transaction support.
        # command: --replSet rs0
        # once started, it needs to be configured
        # start the DB server - example: -
        # docker-compose up -d mongodb && sh -c 'while ! mongo --eval "db.version()" > /dev/null 2>&1; do sleep 0.1; done' && mongo --username=s8-admin --password=s8-admin --host=127.0.0.1 --port=27017 --eval 'rs.initiate()'
        container_name: mongodb
        expose:
            - "27017"
#        ports:
#            - "27017:27017"

    edge:
        image: scale8/edge:latest
        container_name: edge
        depends_on:
            - mongodb
        expose:
            - "6080"
        environment:
            # Run in production
            S8_ENV: "production"
            # To connect to a local version of MongoDB, use mongodb://host.docker.internal .
            MONGO_CONNECT_STRING: "mongodb://mongodb"
            # The API server - required for generating live previews. Here we refer to the 'api' server as defined below.
            S8_API_SERVER: "http://api:8082"
            # The root server refers to the entry point of the network. In this example, we are using the 'route' defined below.
            S8_EDGE_SERVER: "http://127.0.0.1:8080"
            # Proxy a platform's live build in. PROXY_FOR can be either be 'core' or the platform id associated with the platform.
            # PROXY_FOR: "core"
            # PROXY_LOCATION: "http://host.docker.internal:3124/main.js"

    api:
        image: scale8/api:latest
        container_name: api
        depends_on:
            - mongodb
        expose:
            - "8082"
        environment:
            # To connect to a local version of MongoDB, use mongodb://host.docker.internal .
            MONGO_CONNECT_STRING: "mongodb://mongodb"
            # When booting, we want the server to run the setup job (this will race if multiple API servers are booted at the same time)
            SETUP_MODE: "true"

    router:
        image: scale8/router:latest
        container_name: router
        depends_on:
            - edge
            - api
        ports:
            - "8080:80"
